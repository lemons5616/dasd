--// Hitbox Extender GUI con Slider
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui

-- Variables
local hitboxEnabled = false
local hitboxSize = 7

-- Frame principal
local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 220, 0, 150)
Frame.Position = UDim2.new(0.5, -110, 0.5, -75)
Frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true
Frame.Parent = ScreenGui

-- Botón de activar/desactivar
local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(1, -20, 0, 40)
ToggleButton.Position = UDim2.new(0, 10, 0, 10)
ToggleButton.Text = "Hitbox: OFF"
ToggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.TextSize = 18
ToggleButton.Parent = Frame

-- Label para slider
local SizeLabel = Instance.new("TextLabel")
SizeLabel.Size = UDim2.new(1, -20, 0, 20)
SizeLabel.Position = UDim2.new(0, 10, 0, 60)
SizeLabel.Text = "Tamaño: "..hitboxSize
SizeLabel.BackgroundTransparency = 1
SizeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
SizeLabel.Font = Enum.Font.SourceSans
SizeLabel.TextSize = 16
SizeLabel.Parent = Frame

-- Slider
local SliderFrame = Instance.new("Frame")
SliderFrame.Size = UDim2.new(1, -20, 0, 20)
SliderFrame.Position = UDim2.new(0, 10, 0, 85)
SliderFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
SliderFrame.BorderSizePixel = 0
SliderFrame.Parent = Frame

local SliderFill = Instance.new("Frame")
SliderFill.Size = UDim2.new(hitboxSize/50, 0, 1, 0)
SliderFill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
SliderFill.BorderSizePixel = 0
SliderFill.Parent = SliderFrame

-- Función para agregar hitbox
local function addFakeHitbox(char)
    if char == LocalPlayer.Character then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    if char:FindFirstChild("BigHitbox") then
        char.BigHitbox:Destroy()
    end

    if hitboxEnabled then
        local part = Instance.new("Part")
        part.Name = "BigHitbox"
        part.Size = Vector3.new(hitboxSize, hitboxSize, hitboxSize)
        part.Transparency = 0.7
        part.Color = Color3.fromRGB(255, 0, 0)
        part.Anchored = false
        part.CanCollide = false
        part.Massless = true
        part.Parent = char

        local weld = Instance.new("WeldConstraint")
        weld.Part0 = hrp
        weld.Part1 = part
        weld.Parent = part
    end
end

-- Aplicar a todos los jugadores actuales
local function applyToAllPlayers()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer and plr.Character then
            addFakeHitbox(plr.Character)
        end
    end
end

-- Toggle botón
ToggleButton.MouseButton1Click:Connect(function()
    hitboxEnabled = not hitboxEnabled
    ToggleButton.Text = "Hitbox: " .. (hitboxEnabled and "ON" or "OFF")
    ToggleButton.BackgroundColor3 = hitboxEnabled and Color3.fromRGB(0, 170, 80) or Color3.fromRGB(70, 70, 70)
    applyToAllPlayers()
end)

-- Slider para cambiar tamaño dinámicamente
local dragging = false
SliderFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
    end
end)

SliderFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

SliderFrame.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local pos = math.clamp(input.Position.X - SliderFrame.AbsolutePosition.X, 0, SliderFrame.AbsoluteSize.X)
        hitboxSize = math.floor((pos / SliderFrame.AbsoluteSize.X) * 50)
        hitboxSize = math.clamp(hitboxSize, 2, 50)
        SliderFill.Size = UDim2.new(hitboxSize/50, 0, 1, 0)
        SizeLabel.Text = "Tamaño: "..hitboxSize
        if hitboxEnabled then
            applyToAllPlayers()
        end
    end
end)

-- Respawn handling
Players.PlayerAdded:Connect(function(plr)
    plr.CharacterAdded:Connect(function(char)
        task.wait(1)
        addFakeHitbox(char)
    end)
end)

-- También detectar si los jugadores actuales respawnean
for _, plr in ipairs(Players:GetPlayers()) do
    if plr.Character then
        plr.CharacterAdded:Connect(function(char)
            task.wait(1)
            addFakeHitbox(char)
        end)
    end
end
